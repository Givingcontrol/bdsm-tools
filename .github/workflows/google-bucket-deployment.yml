# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when a release is created
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Set up secrets in your workspace: GKE_PROJECT with the name of the project, GKE_EMAIL with the service account email, GKE_KEY with the Base64 encoded JSON service account key (https://github.com/GoogleCloudPlatform/github-actions/tree/docs/service-account-key/setup-gcloud#inputs).
#
# 3. Change the values for the GKE_ZONE, GKE_CLUSTER, IMAGE, REGISTRY_HOSTNAME and DEPLOYMENT_NAME environment variables (below).

name: Build and Deploy to GKE

on:
  release:
    types: [created]

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '270.0.0'
        service_account_email: ${{ secrets.GC_EMAIL }}
        service_account_key: ${{ secrets.GC_KEY }}
        
    - name: Build
      uses: actions/setup-node@v1
    - run: npm run build

    - name: GCP Cloud Storage - Deploy
      uses: abinmn/gcp-storage-bucket-action@v1.0
      with:
        # GCP service key encoded as base64. The account associated with the key should have permissions to make changes in storage bucket.
        service_key: ${{ secrets.GC_KEY }}
        build_folder: dist/
        bucket_name: bdsm-tools-ui
        project: bdsm-tools
        home_page_path: index.html
        error_page_path: index.html
